# Production Environment Configuration
# Copy this file to .env on your production server and update with your values

# Server Configuration
PORT=3000
NODE_ENV=production

# Session Secret (REQUIRED - Generate a new one!)
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
# NEVER use the same secret as development!
SESSION_SECRET=GENERATE_A_NEW_RANDOM_SECRET_HERE

# Database (SQLite file will be created automatically)
# No configuration needed for SQLite

# Base URL Configuration - PRODUCTION
# IMPORTANT: Use your full FQDN with HTTPS
# Examples:
#   BASE_URL=https://yourdomain.com
#   BASE_URL=https://app.yourdomain.com
#   BASE_URL=https://www.yourdomain.com
BASE_URL=https://yourdomain.com

# Email Configuration - Production SMTP
SMTP_HOST=smtp.yourdomain.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=noreply@yourdomain.com
SMTP_PASSWORD=your-production-smtp-password
SMTP_TLS_REJECT_UNAUTHORIZED=true
EMAIL_FROM=AI Prompt Templates <noreply@yourdomain.com>

# Production Security Notes:
# 1. ALWAYS use HTTPS in production (your BASE_URL must start with https://)
# 2. Generate a NEW SESSION_SECRET for production (don't reuse development key)
# 3. Set SMTP_TLS_REJECT_UNAUTHORIZED=true for secure certificate validation
# 4. Use strong, unique passwords for SMTP_PASSWORD
# 5. Never commit this file to version control
# 6. Ensure your domain has proper SSL/TLS certificates installed
# 7. Consider using environment-specific email addresses (e.g., noreply@yourdomain.com)

# SSL/TLS Configuration:
# Your web server (Nginx, Apache, etc.) should handle SSL/TLS termination
# Node.js application will run on HTTP internally, but be accessed via HTTPS externally
# Example Nginx configuration snippet:
#   server {
#     listen 443 ssl http2;
#     server_name yourdomain.com;
#     ssl_certificate /path/to/cert.pem;
#     ssl_certificate_key /path/to/key.pem;
#
#     location / {
#       proxy_pass http://localhost:3000;
#       proxy_set_header Host $host;
#       proxy_set_header X-Forwarded-Proto $scheme;
#     }
#   }
